package Calculator;
import javax.swing.JFrame;

import java.awt.Toolkit;

import javax.swing.JTextPane;

import java.awt.SystemColor;
import java.awt.Font;

import javax.swing.JButton;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

import javax.swing.JOptionPane;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JMenu;

import java.awt.Color;


@SuppressWarnings("serial")
public class CalculatoInterface extends JFrame {
	
	double n1 = 0, n2 = 0;
	eHandler handler = new eHandler();
	JTextPane textPane = new JTextPane();
	JTextPane textPaneLastNumber = new JTextPane();
	JButton bBack = new JButton("<---");
	JButton bClear = new JButton("C");
	JButton bPM = new JButton("+-");
	JButton b1 = new JButton("1");
	JButton b2 = new JButton("2");
	JButton b3 = new JButton("3");
	JButton bX = new JButton("*");
	JButton b4 = new JButton("4");
	JButton b5 = new JButton("5");
	JButton b6 = new JButton("6");
	JButton bM = new JButton("-");
	JButton b7 = new JButton("7");
	JButton b8 = new JButton("8");
	JButton b9 = new JButton("9");
	JButton bP = new JButton("+");
	JButton b0 = new JButton("0");
	JButton bZ = new JButton(",");
	JButton bE = new JButton("=");
	JButton bD = new JButton("/");
	JMenuBar menuBar = new JMenuBar();
	JMenu spravka = new JMenu("\u0421\u043F\u0440\u0430\u0432\u043A\u0430");
	JMenuItem oProgramme = new JMenuItem("\u041E \u043F\u0440\u043E\u0433\u0440\u0430\u043C\u043C\u0435");
	
	
	public CalculatoInterface() {
		setIconImage(Toolkit.getDefaultToolkit().getImage(CalculatoInterface.class.getResource("/javax/swing/plaf/metal/icons/ocean/computer.gif")));
		setTitle("\u041A\u0430\u043B\u044C\u043A\u0443\u043B\u044F\u0442\u043E\u0440 by Logan1495");
		getContentPane().setLayout(null);
		textPane.setEditable(false);
		textPane.setToolTipText("textPane.setText(\"1123\");");
		textPane.setText("0");
		textPane.setFont(new Font("Arial", Font.PLAIN, 28));
		textPane.setBackground(SystemColor.controlHighlight);
		textPane.setForeground(Color.BLACK);
		textPane.setBounds(10, 24, 287, 34);
		getContentPane().add(textPane);
				
		bBack.setBounds(10, 71, 58, 49);
		getContentPane().add(bBack);
		
		bClear.setBounds(84, 71, 58, 49);
		getContentPane().add(bClear);
		
		bPM.setBounds(160, 71, 58, 49);
		getContentPane().add(bPM);
		
		b1.setBounds(10, 131, 58, 49);
		getContentPane().add(b1);
		
		b2.setBounds(84, 131, 58, 49);
		getContentPane().add(b2);
		
		b3.setBounds(160, 131, 58, 49);
		getContentPane().add(b3);
		
		bX.setBounds(233, 71, 58, 49);
		getContentPane().add(bX);
		
		b4.setBounds(10, 191, 58, 49);
		getContentPane().add(b4);
		
		b5.setBounds(84, 191, 58, 49);
		getContentPane().add(b5);
		
		b6.setBounds(160, 191, 58, 49);
		getContentPane().add(b6);
		
		bM.setBounds(233, 131, 58, 49);
		getContentPane().add(bM);
		
		b7.setBounds(10, 251, 58, 49);
		getContentPane().add(b7);
		
		b8.setBounds(84, 251, 58, 49);
		getContentPane().add(b8);
		
		b9.setBounds(160, 251, 58, 49);
		getContentPane().add(b9);
		
		bP.setBounds(233, 191, 58, 49);
		getContentPane().add(bP);
		
		b0.setBounds(10, 311, 132, 49);
		getContentPane().add(b0);
		
		bZ.setBounds(160, 311, 58, 49);
		getContentPane().add(bZ);
		
		bE.setFont(new Font("Tahoma", Font.PLAIN, 29));
		bE.setBounds(233, 311, 58, 49);
		getContentPane().add(bE);
		
		bD.setBounds(233, 251, 58, 49);
		getContentPane().add(bD);
		
		textPaneLastNumber.setBounds(10, 8, 261, 20);
		getContentPane().add(textPaneLastNumber);
		textPaneLastNumber.setEditable(false);
		
		JMenuBar menuBar = new JMenuBar();
		menuBar.setToolTipText("");
		setJMenuBar(menuBar);
		
		menuBar.add(spravka);
		
		spravka.add(oProgramme);
		
		b1.addActionListener(handler);
		b2.addActionListener(handler);
		b3.addActionListener(handler);
		b4.addActionListener(handler);
		b5.addActionListener(handler);
		b6.addActionListener(handler);
		b7.addActionListener(handler);
		b8.addActionListener(handler);
		b9.addActionListener(handler);
		b0.addActionListener(handler);
		bBack.addActionListener(handler);
		bClear.addActionListener(handler);
		bPM.addActionListener(handler);
		bP.addActionListener(handler);
		bM.addActionListener(handler);
		bX.addActionListener(handler);
		bD.addActionListener(handler);
		bE.addActionListener(handler);
		bZ.addActionListener(handler);
		oProgramme.addActionListener(handler);
		
	}
	public class eHandler implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if(e.getSource()==b1) {
				calculate(1);
			}
			else if(e.getSource()==b2) {
				calculate(2);
			}
			else if(e.getSource()==b3) {
				calculate(3);
			}
			else if(e.getSource()==b4) {
				calculate(4);
			}
			else if(e.getSource()==b5) {
				calculate(5);
			}
			else if(e.getSource()==b6) {
				calculate(6);
			}
			else if(e.getSource()==b7) {
				calculate(7);
			}
			else if(e.getSource()==b8) {
				calculate(8);
			}
			else if(e.getSource()==b9) {
				calculate(9);
			}
			else if(e.getSource()==b0) {
				calculate(0);
			}
			else if(e.getSource()==bBack) {
				backspace();
			}
			else if(e.getSource()==bClear) {
				textPane.setText("0");
				textPaneLastNumber.setText("");
				n1 = 0;
				n2 = 0;
			}
			else if(e.getSource()==bPM) {
				n1 = n1-(n1*2);
				textPane.setText( Double.toString(n1));
			}
			else if(e.getSource()==bP) {
				String str = textPaneLastNumber.getText();
				boolean x11 = str.endsWith("+");
				if(n2==0) {
					n2 = n2 + n1;
					n1 = 0;
					textPaneLastNumber.setText(Double.toString(n2).replace(".0", "") + "+");
					textPane.setText("0");
				}
				if(x11== true) {
					n2 = n2 + n1;
					n1 = 0;
					textPaneLastNumber.setText(Double.toString(n2).replace(".0", "") + "+");
					textPane.setText("0");
				}
				else if(x11==false) {
					if (str.length()>1){
						int last = str.length()-1;
						textPaneLastNumber.setText(str.substring(0, last) + "+");
					}
				}
			}
			else if(e.getSource()==bM) {
				String str = textPaneLastNumber.getText();
				boolean x11 = str.endsWith("-");
				if(n2==0) {
					n2 = n1;
					n1 = 0;
					textPaneLastNumber.setText(Double.toString(n2).replace(".0", "") + "-");
					textPane.setText("0");
				}
				if(x11== true) {
					n2 = n2 - n1;
					n1 = 0;
					textPaneLastNumber.setText(Double.toString(n2).replace(".0", "") + "-");
					textPane.setText("0");
				}
				else if(x11==false) {
						if (str.length()>1){
						int last = str.length()-1;
						textPaneLastNumber.setText(str.substring(0, last) + "-");
					}
				}
			}
			else if(e.getSource()==bX) {
				String str = textPaneLastNumber.getText();
				boolean x11 = str.endsWith("*");
				if(n2==0) {
					n2 = n1;
					n1 = 0;
					textPaneLastNumber.setText(Double.toString(n2).replace(".0", "") + "*");
					textPane.setText("0");
				}
				else if(n2 != 0) {
					if(x11== true) {
						n2 = n2 * n1;
						n1 = 0;
						textPaneLastNumber.setText(Double.toString(n2).replace(".0", "") + "*");
						textPane.setText("0");
					}
					else if(x11==false) {
						if (str.length()>1){
							int last = str.length()-1;
							textPaneLastNumber.setText(str.substring(0, last) + "*");
						}
					}
				}
			}
			else if(e.getSource()==bD) {
				String str = textPaneLastNumber.getText();
				boolean x11 = str.endsWith("/");
				if(n2==0) {
					n2 = n1;
					n1 = 0;
					textPaneLastNumber.setText(Double.toString(n2).replace(".0", "") + "/");
					textPane.setText("0");
				}
				else if(n2 != 0) {
					if(x11== true) {
						if(n1== 0){ JOptionPane.showMessageDialog(null, "Деление на ноль невозможно"); return;}
						n2 = n2 / n1;
						n1 = 0;
						textPaneLastNumber.setText(Double.toString(n2).replace(".0", "") + "/");
						textPane.setText("0");
					}
					else if(x11==false) {
						if (str.length()>1){
							int last = str.length()-1;
							textPaneLastNumber.setText(str.substring(0, last) + "/");
						}
					}
				}
			}
			else if(e.getSource()==bE) {
				if(n1 != 0 && n2 != 0){
					
					String str = textPaneLastNumber.getText();
					if(str.endsWith("+") == true) {
						n1 = n1 +n2;
						n2 = 0;
						textPane.setText(Double.toString(n1).replace(".0", ""));
						textPaneLastNumber.setText("");
					}
					else if(str.endsWith("-") == true) {
						n1 = n2 -n1;
						n2 = 0;
						textPane.setText(Double.toString(n1).replace(".0", ""));
						textPaneLastNumber.setText("");
					}
					else if(str.endsWith("*") == true) {
						n1 = n1 *n2;
						n2 = 0;
						textPane.setText(Double.toString(n1).replace(".0", ""));
						textPaneLastNumber.setText("");
					}
					else if(str.endsWith("/") == true) {
						n1 = n2 / n1;
						n2 = 0;
						textPane.setText(Double.toString(n1).replace(".0", ""));
						textPaneLastNumber.setText("");
					}
				}
			}
			else if(e.getSource()== bZ) {
				String str = textPane.getText();
				if(str.contains(".") == true){
					//JOptionPane.showMessageDialog(null, "wat?2.");
					if(n1== 0){ JOptionPane.showMessageDialog(null, "В числе уже есть запятая."); return;}
				}
				else if(str.contains(".") == false) {
					str = str + ".";
					textPane.setText(str);
					//JOptionPane.showMessageDialog(null, "wat?.");
				}
			}
			else if(e.getSource()== oProgramme) {
				JOptionPane.showMessageDialog(null, "Калькулятор v0.1 by Logan1495.\nCreated on Java machine.","О программе",1);
			}
		}
	}
	public void calculate(int a) {
		 
		String b = textPane.getText();
		if(b.equals("0")){
			textPane.setText(Integer.toString(a));
		}
		else{
			if(b.length()<16){
			textPane.setText(b + Integer.toString(a));
			}
			else JOptionPane.showMessageDialog(null, "Достигнут лимит цифр."); 
		}
		n1 = Double.parseDouble(textPane.getText());
	}
	public void backspace() {
		 
		String b = textPane.getText();
		if(b.length()<2){
			textPane.setText("0");
			n1 = 0;
		}
		else{
			int last= b.length()-1;
			textPane.setText(b.substring(0, last));
			n1 = Double.parseDouble(b.substring(0, last));
		}
	}
}
